#!/usr/bin/env python3

days = ["sunday", "monday", "tuesday","wednesday", "thursday","friday", "saturday"]

print("""package com.mba.drc.medicalapp;

/* This class respresents a collection of non-mutually exclusive days

 this file was generated by a script */
 
class DayGroup{""")

# Private field
for day in days:
	print(f"\tprivate boolean m{day.title()};")
print("")

# Default constructor
print("\tDayGroup(){")
for day in days:
	print(f"\t\tm{day.title()} = false;")
print("\t}")

# Construct from an integer (taken from database)
print("\tDayGroup(int dnum){")
k = 0
for day in days:
	print(f"\t\tm{day.title()} = ((dnum>>{k}) & 0x01) != 0;")
	k += 1
print("\t}")
print("")

# Getters
for day in days:
	print(f"\tboolean {day}(){{return m{day.title()};}}")
print("");

# Setters
for day in days:
	print(f"\tvoid set{day.title()}(boolean s){{ m{day.title()}=s; }}")
	print(f"\tvoid set{day.title()}(){{ m{day.title()}=true; }}")

# Convert to integer (for database)
print("\tint toInt(){\n\t\tint rv = 0;")
k = 0
for day in days:
	print(f"\t\trv |= (m{day.title()} ? (1<<{k}) : 0);")
	k += 1
print("\t\treturn rv;\n\t}")
	

print("}\n")
